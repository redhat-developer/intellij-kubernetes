plugins {
    id "org.jetbrains.intellij"
    id "org.jetbrains.kotlin.jvm"
    id "idea"
}

def remoteRobotVersion = "0.10.3"
def fixturesVersion = "1.1.18"

downloadRobotServerPlugin.version = remoteRobotVersion

sourceSets {
    integrationTest {
        java.srcDir file('src/it/java')
        resources.srcDir file('src/it/resources')
        compileClasspath += sourceSets.main.output + configurations.testRuntime
        runtimeClasspath += output + compileClasspath
    }
}

task integrationTest(type: Test) {
    description = 'Runs the integration tests.'
    group = 'verification'
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
    mustRunAfter test
}

tasks.withType(Test) {
    environment 'GRADLE_RELEASE_REPOSITORY','https://services.gradle.org/distributions'
}

dependencies {
    integrationTestImplementation("com.intellij.remoterobot:remote-robot:$remoteRobotVersion")
    integrationTestImplementation("com.intellij.remoterobot:remote-fixtures:$fixturesVersion")
    integrationTestImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    integrationTestRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    implementation(
            "com.redhat.devtools.intellij:intellij-common:1.0.0",
            "org.jetbrains.kotlin:kotlin-gradle-plugin",
            "org.jetbrains.kotlin:kotlin-stdlib-jdk8",
            "io.fabric8:kubernetes-client:5.0.2",
            "io.fabric8:kubernetes-model:5.0.2",
            "io.fabric8:kubernetes-model-common:5.0.2",
            "io.fabric8:openshift-client:5.0.2",
            "org.apache.commons:commons-lang3:3.10"
    )
    testImplementation(
            "org.assertj:assertj-core:3.17.1",
            "org.mockito:mockito-inline:3.5.13",
            "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0",
            "org.jetbrains.kotlin:kotlin-test-junit"
    )
}

configurations {
    compile {
        exclude group: 'org.slf4j', module: 'slf4j-api'
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    compileKotlin {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }

    compileTestKotlin {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }

    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
}

test {
    afterSuite { desc, result ->
        if (!desc.parent)
            println("${result.resultType} " +
                    "(${result.testCount} tests, " +
                    "${result.successfulTestCount} successes, " +
                    "${result.failedTestCount} failures, " +
                    "${result.skippedTestCount} skipped)")
    }
}

intellij {
    version ideaVersion //for a full list of Jetbrains IDEA releases please see https://www.jetbrains.com/intellij-repository/releases
    pluginName 'Kubernetes by Red Hat'
    updateSinceUntilBuild false
}

patchPluginXml {
    sinceBuild sinceIdeaBuild
}

publishPlugin {
    token    jetBrainsToken
    channels jetBrainsChannel
}

runIdeForUiTests {
    systemProperty "robot-server.port", "8082" // default port 8080
}

integrationTest {
    useJUnitPlatform()
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url 'https://repository.jboss.org'
    }
    maven {
        url 'https://jetbrains.bintray.com/intellij-third-party-dependencies'
    }
}
    
group 'com.redhat.devtools.intellij'
version projectVersion
